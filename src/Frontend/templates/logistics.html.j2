{% extends "base.html.j2" %}
{% block content %}

<div class="container my-5">
  <h1 class="mb-4 text-center">ðŸ“¦ Logistics Control Hub</h1>

  <!-- Store Boxes -->
  <div class="card mb-4">
    <div class="card-header bg-primary text-white">
      <i class="bi bi-box-seam"></i> Store a New Box
    </div>
    <div class="card-body">
      <form id="store-box-form">
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="itemsCount" class="form-label">Number of Items</label>
            <input type="number" class="form-control" id="itemsCount" required min="1" placeholder="e.g., 5">
          </div>
          <div class="col-md-6">
            <label for="boxWeight" class="form-label">Box Weight (kg)</label>
            <input type="number" class="form-control" id="boxWeight" required min="0.1" step="0.1" placeholder="e.g., 12.5">
          </div>
        </div>
        <button type="submit" class="btn btn-success"><i class="bi bi-check-circle"></i> Confirm</button>
      </form>
      <div class="mt-3" id="newBoxId" style="display: none;">
        <div class="alert alert-info">
          New Box Stored! Assigned ID: <strong id="generatedBoxId"></strong>
        </div>
      </div>
    </div>
  </div>

  <!-- Retrieve Box -->
  <div class="card mb-4">
    <div class="card-header bg-warning">
      <i class="bi bi-box-arrow-in-down"></i> Retrieve a Box
    </div>
    <div class="card-body">
      <form id="retrieve-box-form">
        <div class="row mb-3">
          <div class="col-md-8">
            <label for="boxIdSelect" class="form-label">Select Box ID</label>
            <select class="form-select" id="boxIdSelect" required>
              <!-- Populated from API -->
            </select>
          </div>
        </div>
        <button type="submit" class="btn btn-danger"><i class="bi bi-box-arrow-up"></i> Confirm</button>
      </form>
    </div>
  </div>

  <!-- Inventory Display -->
  <div class="card">
    <div class="card-header bg-secondary text-white">
      <i class="bi bi-archive"></i> Inventory Overview
    </div>
    <div class="card-body" id="inventoryDisplay">
      <!-- Inventory cards will be rendered here -->
    </div>
  </div>
</div>

<script>
const API_BASE = '/boxes';

async function fetchInventory() {
  try {
    const res = await fetch(API_BASE);
    const boxes = await res.json();

    const display = document.getElementById('inventoryDisplay');
    const select = document.getElementById('boxIdSelect');
    display.innerHTML = '';
    select.innerHTML = '';

    if (!boxes.length) {
      display.innerHTML = '<p class="text-muted">No boxes currently in inventory.</p>';
      return;
    }

    boxes.forEach(box => {
      const card = document.createElement('div');
      card.className = 'card mb-2';
      card.innerHTML = `
        <div class="card-body">
          <h5 class="card-title">Box ID: ${box.id}</h5>
          <p class="card-text">
            Items: ${box.items} <br>
            Weight: ${box.weight} kg
          </p>
        </div>`;
      display.appendChild(card);

      const option = document.createElement('option');
      option.value = box.id;
      option.textContent = box.id;
      select.appendChild(option);
    });
  } catch (err) {
    console.error('Failed to fetch inventory:', err);
  }
}

document.getElementById('store-box-form').addEventListener('submit', async function (e) {
  e.preventDefault();
  const items = parseInt(document.getElementById('itemsCount').value);
  const weight = parseFloat(document.getElementById('boxWeight').value);

  try {
    const res = await fetch(API_BASE, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ items, weight })
    });

    if (!res.ok) throw new Error('Failed to store box');
    const data = await res.json();

    document.getElementById('generatedBoxId').textContent = data.id;
    document.getElementById('newBoxId').style.display = 'block';
    this.reset();
    fetchInventory();
  } catch (err) {
    alert('Error storing box: ' + err.message);
  }
});

document.getElementById('retrieve-box-form').addEventListener('submit', async function (e) {
  e.preventDefault();
  const boxId = document.getElementById('boxIdSelect').value;

  try {
    const res = await fetch(`${API_BASE}/${boxId}`, {
      method: 'DELETE'
    });

    if (!res.ok) throw new Error('Failed to retrieve box');
    fetchInventory();
  } catch (err) {
    alert('Error retrieving box: ' + err.message);
  }
});

// Load inventory on page load
fetchInventory();
</script>

{% endblock content %}
